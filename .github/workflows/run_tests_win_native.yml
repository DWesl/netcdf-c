###
# Build hdf4, hdf5 dependencies and cache them in a combined directory.
###

name: Run Windows netCDF Tests

on: [pull_request, workflow_dispatch, push]

jobs:

  build-deps-serial:

    runs-on: windows-latest
    name: Windows/CMake tests

    strategy:
      matrix:
        hdf5: [ 1.8.22, 1.10.8, 1.12.1 ]

    steps:

      - uses: actions/checkout@v2

        ###
        # Installing libhdf4 and libhdf5
        ###
      - name: Cache libhdf5-${{ matrix.hdf5 }}
        id: cache-hdf5
        uses: actions/cache@v2
        with:
          path: ~/environments/${{ matrix.hdf5 }}
          key: hdf5-${{ runner.os }}-${{ matrix.hdf5 }}


      - name: Build libhdf5-${{ matrix.hdf5 }}
        if: steps.cache-hdf5.outputs.cache-hit != 'true'
        run: |
          Invoke-WebRequest https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-$(echo ${{ matrix.hdf5 }} | cut -d. -f 1,2)/hdf5-${{ matrix.hdf5 }}/src/hdf5-${{ matrix.hdf5 }}.tar.bz2 -OutFile hdf5-${{ matrix.hdf5 }}.tar.bz2
          tar -jxf hdf5-${{ matrix.hdf5 }}.tar.bz2
          pushd hdf5-${{ matrix.hdf5 }}
          mkdir build
          cd build
          cmake -G \"Visual Studio 17 2022\" -A x64 -DBUILD_SHARED_LIBS=ON -DHDF5_ENABLE_THREADSAFE:BOOL=ON -DHDF5_ENABLE_PARALLEL:BOOL=OFF -DHDF5_BUILD_HL_LIB:BOOL=ON ..
          cmake --build -j
          cmake --install . --prefix ${HOME}/environments/${{ matrix.hdf5 }} -j
          popd
          
  #####
  # One-Off CMake-based tests.
  #####
  ##
  # Serial
  ##
  nc-cmake-tests-oneoff-serial:

    needs: build-deps-serial
    runs-on: windows-latest

    strategy:
      matrix:
        hdf5: [ 1.12.1 ]

    steps:

      - uses: actions/checkout@v2

      ###
      # Set Environmental Variables
      ###

      - run: echo "CMAKE_PREFIX_PATH=${HOME}/environments/${{ matrix.hdf5 }}/" >> $GITHUB_ENV
      - run: echo "LD_LIBRARY_PATH=${HOME}/environments/${{ matrix.hdf5 }}/lib" >> $GITHUB_ENV

      ###
      # Fetch Cache
      ###

      - name: Fetch HDF Cache
        id: cache-hdf5
        uses: actions/cache@v2
        with:
          path: ~/environments/${{ matrix.hdf5 }}
          key: hdf5-${{ runner.os }}-${{ matrix.hdf5 }}

      - name: Check Cache
        run: ls ${HOME}/environments && ls ${HOME}/environments/${{ matrix.hdf5 }} && ls ${HOME}/environments/${{ matrix.hdf5}}/lib

      ###
      # Configure and build
      ###

      - name: Perform out-of-directory build
        run: |
          mkdir build
          cd build
          cmake .. -DENABLE_HDF4=FALSE -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH} -DENABLE_DAP=TRUE -DENABLE_HDF5=TRUE -DENABLE_NCZARR=TRUE -D ENABLE_DAP_LONG_TESTS=TRUE
      - name: Print Summary
        run: |
          cd build
          cat libnetcdf.settings
      - name: Build All
        run: |
          cd build
          cmake --build -j 12
        if: ${{ success() }}

      - name: Run Tests
        run: |
          cd build
          ctest --output-on-failure -j 12 .
        if: ${{ success() }}

      - name: Verbose Output if CTest Failure
        run: |
          cd build
          ctest -j 12 --rerun-failed --output-on-failure -VV
        if: ${{ failure() }}
